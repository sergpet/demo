buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

configure (allprojects) {
    apply plugin: 'war'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'
    apply plugin: 'io.spring.dependency-management'
}

//jar {
//    baseName = 'demo'
//    version = '0.0.1-SNAPSHOT'
//}

war {
    baseName = 'demo'
    version =  "0.5"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
    mavenCentral()
}

configurations {
    providedRuntime
}

bootRepackage {
    mainClass = 'demo.DemoApplication'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-parent:1.3.0.BUILD-SNAPSHOT")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("mysql:mysql-connector-java:5.1.13")
    compile("postgresql:postgresql:9.0-801.jdbc4")
    compile('log4j:log4j:1.2.17')
    compile("org.springframework:spring-jdbc")

    runtime("org.springframework:spring-jdbc")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('junit:junit:4.10')

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
